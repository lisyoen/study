services:

  log-getter:
    container_name: log-getter
    image: log-getter
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    environment:
      POSTGRES_HOSTNAME: log-db
      POSTGRES_DATABASE: log_db
      POSTGRES_USER: log-getter
      POSTGRES_PASSWORD: test_password
    ports:
      - 3000:3000
    depends_on:
      - log-db
    networks:
      - log-getter

  log-db:
    container_name: log-db
    hostname: log-db
    image: "postgres:15"
    restart: always
    environment:
      POSTGRES_USER: log-getter
      POSTGRES_PASSWORD: test_password
      POSTGRES_DB: log_db
    ports:
      - 5432:5432
    volumes:
      - log-data:/var/lib/postgresql/data
    networks:
      - log-getter

  grafana:
    container_name: grafana
    hostname: grafana
    image: "grafana/grafana"
    restart: always
    environment:
      GF_SECURITY_ADMIN_PASSWORD: "1234"
      GF_SSL_STRICT: "false"
    ports:
      - 3030:3000
    volumes:
      - grafana-data2:/var/lib/grafana
    networks:
      - log-getter

  log-client:
    container_name: log-client
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "5173:80"
    depends_on:
      - log-getter
    restart: unless-stopped
    networks:
      - log-getter

networks:
  log-getter:
    driver: bridge

volumes:
  log-data:
  grafana-data2:
