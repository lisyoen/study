{
    "id": 1745383914738,
    "name": "autocomplete",
    "data": {
        "timestamp": 1745383904714,
        "userId": "",
        "userAgent": "Visual Studio Code/1.98.2 (Continue/1.1.24)",
        "selectedProfileId": "local",
        "eventName": "autocomplete",
        "schema": "0.2.0",
        "disable": false,
        "maxPromptTokens": 1024,
        "debounceDelay": 350,
        "maxSuffixPercentage": 0.2,
        "prefixPercentage": 0.3,
        "transform": true,
        "multilineCompletions": "auto",
        "slidingWindowPrefixPercentage": 0.75,
        "slidingWindowSize": 500,
        "useCache": true,
        "onlyMyCode": true,
        "useRecentlyEdited": true,
        "useImports": true,
        "accepted": false,
        "time": 1258,
        "prefix": "// Path: api/post.js\n// import fs from 'fs';\n// import path from 'path';\n// import { fileURLToPath } from 'url'; // 추가\n// import { promises as fsPromises } from 'fs';\n// // __dirname 대체 코드\n// const __filename = fileURLToPath(import.meta.url);\n// const __dirname = path.dirname(__filename);\n// const dataDir = path.resolve(__dirname, '../../data'); // 상대 경로로 변경\n// const dataFile = path.join(dataDir, 'posts.jsonl'); // 파일 확장자 변경\n// // Ensure the data directory exists\n// if (!fs.existsSync(dataDir)) {\n//     fs.mkdirSync(dataDir, { recursive: true });\n// }\n// export async function savePost(data) {\n//     try {\n//         const newEntry = { id: Date.now(), ...data, createdAt: new Date().toISOString() };\n//         // JSON 로그를 한 줄씩 추가\n//         await fsPromises.appendFile(dataFile, JSON.stringify(newEntry) + '\\n', 'utf-8');\n//         console.log('Saved at:', new Date().toLocaleTimeString()); // 시간만 출력\n//         return { success: true, id: newEntry.id };\n//     }\n//     catch (error) {\n//         if (error instanceof Error) {\n//             console.error('Error saving post to file:', error.message);\n//         }\n//         else {\n//             console.error('Error saving post to file:', error);\n//         }\n//         throw error;\n//     }\n// }\n// Path: dist/index.js\n// // 시작 시간 로그 출력\n// // 기본 라우트 설정\n// dist/index.js\nimport express from 'express';\nimport { savePost } from './api/post.js'; // .js 확장자 추가\nconst app = express();\nconst PORT = 4040;\napp.use(express.json());\n// 시작 시간 로그 출력\napp.listen(PORT, () => {",
        "suffix": "\n// 기본 라우트 설정\napp.post('/savepost', async (req, res) => {\n    try {\n        const result = await savePost(req.body);\n        res.status(201).json(result);\n    }\n    catch (error) {\n        if (error instanceof Error) {\n            console.error('Error in /savepost route:', error.message); // 에러 로그 추가\n        }\n        else {\n            console.error('Error in /savepost route:', error); // 에러 로그 추가\n        }\n        res.status(500).json({\n            error: 'Failed to save post',\n            message: error instanceof Error ? error.message : 'Unknown error'",
        "prompt": "<|fim_prefix|>// Path: api/post.js\n// import fs from 'fs';\n// import path from 'path';\n// import { fileURLToPath } from 'url'; // 추가\n// import { promises as fsPromises } from 'fs';\n// // __dirname 대체 코드\n// const __filename = fileURLToPath(import.meta.url);\n// const __dirname = path.dirname(__filename);\n// const dataDir = path.resolve(__dirname, '../../data'); // 상대 경로로 변경\n// const dataFile = path.join(dataDir, 'posts.jsonl'); // 파일 확장자 변경\n// // Ensure the data directory exists\n// if (!fs.existsSync(dataDir)) {\n//     fs.mkdirSync(dataDir, { recursive: true });\n// }\n// export async function savePost(data) {\n//     try {\n//         const newEntry = { id: Date.now(), ...data, createdAt: new Date().toISOString() };\n//         // JSON 로그를 한 줄씩 추가\n//         await fsPromises.appendFile(dataFile, JSON.stringify(newEntry) + '\\n', 'utf-8');\n//         console.log('Saved at:', new Date().toLocaleTimeString()); // 시간만 출력\n//         return { success: true, id: newEntry.id };\n//     }\n//     catch (error) {\n//         if (error instanceof Error) {\n//             console.error('Error saving post to file:', error.message);\n//         }\n//         else {\n//             console.error('Error saving post to file:', error);\n//         }\n//         throw error;\n//     }\n// }\n// Path: dist/index.js\n// // 시작 시간 로그 출력\n// // 기본 라우트 설정\n// dist/index.js\nimport express from 'express';\nimport { savePost } from './api/post.js'; // .js 확장자 추가\nconst app = express();\nconst PORT = 4040;\napp.use(express.json());\n// 시작 시간 로그 출력\napp.listen(PORT, () => {<|fim_suffix|>\n// 기본 라우트 설정\napp.post('/savepost', async (req, res) => {\n    try {\n        const result = await savePost(req.body);\n        res.status(201).json(result);\n    }\n    catch (error) {\n        if (error instanceof Error) {\n            console.error('Error in /savepost route:', error.message); // 에러 로그 추가\n        }\n        else {\n            console.error('Error in /savepost route:', error); // 에러 로그 추가\n        }\n        res.status(500).json({\n            error: 'Failed to save post',\n            message: error instanceof Error ? error.message : 'Unknown error'<|fim_middle|>",
        "completion": "\n    console.log(`Server started at ${new Date().toLocaleTimeString()}`); // 시간만 출력",
        "modelProvider": "openai",
        "modelName": "S-Core/Qwen2.5-Coder-32B-Instruct",
        "cacheHit": false,
        "filepath": "file:///d%3A/git/savepost/dist/index.js",
        "gitRepo": "lisyoen/savepost",
        "completionId": "6cf94c83-e2a0-451e-9209-fef38d937880",
        "uniqueId": "e2a845d8706327f84a480cd6e42786f44815ec0ad0891ee9a3ec7982d29a33a2"
    },
    "schema": "0.2.0",
    "level": "all",
    "profileId": "local",
    "createdAt": "2025-04-23T04:51:54.738Z"
}